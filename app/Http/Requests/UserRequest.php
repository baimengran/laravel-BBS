<?php

namespace App\Http\Requests;

use Illuminate\Contracts\Validation\Validator;
use Illuminate\Foundation\Http\FormRequest;

class UserRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        \Log::info($this->route()->getName());
        switch ($this->route()->getName()) {
            case 'users.editBasic':
                return [
                    //
                    'name' => 'required|between:3,25|regex:/^[A-Za-z0-9\-\_]+$/|unique:users,name,' . \Auth::id(),
                    'email' => 'required|email|unique:users,email,' . \Auth::id(),
                    'introduction' => 'nullable|max:100',
                    'phone' => 'nullable|digits:11',
                    'company' => 'nullable',
                    'position' => 'nullable',
                    'work_address' => 'nullable',

                ];
                break;
            case 'users.editAvatar':
                return [
                    'img' => 'mimes:jpeg,bmp,png,gif|dimensions:min_width=200,min_height=200',
                ];
                break;
        }
    }

    public function attributes()
    {
        return [
            'name'=>'用户名',
            'email'=>'邮箱',
            'introduction'=>'简介',
            'phone'=>'电话',
            'company'=>'公司',
            'position'=>'任职',
            'work_address'=>'公司地址',
        ];
    }

    public function failedValidation(Validator $validator)
    {
        parent::failedValidation($validator); // TODO: Change the autogenerated stub
        exit(json_encode(array(
            'code' => 403,
            'errors' => $validator->errors(),
        )));
    }

}
